pipeline {
  agent any

  environment {
    APP_NAME           = 'bof-careers'
    DOCKER_HUB_USER    = 'auliaanrhm'
    DOCKER_TAG         = 'latest'
    DOCKER_IMAGE       = "${DOCKER_HUB_USER}/${APP_NAME}:${DOCKER_TAG}"
    DOCKER_CREDENTIALS = 'dockerhub-credentials'

    // port untuk phpMyAdmin (harus sama dengan yang dipakai di docker-compose.yaml)
    PHPMYADMIN_PORT    = '18082'
  }

  stages {
    stage('Checkout') {
      steps {
        echo "üì• Checkout ${env.APP_NAME}‚Ä¶"
        git branch: 'main', url: 'https://github.com/auliaanrhm/uas_fp-main.git'
      }
    }

    stage('Build Docker Image') {
      steps {
        echo "üê≥ Build image ${env.DOCKER_IMAGE}"
        bat  'docker build -t %DOCKER_IMAGE% .'
      }
    }

    stage('Push to Docker Hub') {
      steps {
        echo "üì§ Push ${env.DOCKER_IMAGE}"
        withCredentials([usernamePassword(
          credentialsId: env.DOCKER_CREDENTIALS,
          usernameVariable: 'USER',
          passwordVariable: 'PASS'
        )]) {
          bat 'docker login -u %USER% -p %PASS%'
          bat 'docker push %DOCKER_IMAGE%'
        }
      }
    }

    stage('Run Docker Compose') {
      steps {
        echo 'üöÄ docker compose up'

        // 1) Bebasin port phpMyAdmin jika ada container lain yang publish port tsb
        powershell '''
          $port = $env:PHPMYADMIN_PORT
          $cid = docker ps -q --filter "publish=$port"
          if ($cid) {
            Write-Host "Port $port in use by container $cid -> removing‚Ä¶"
            docker rm -f $cid | Out-Null
          }
        '''

        // 2) Hapus container lama project ini (aman walau belum ada)
        powershell '''
          "db","phpmyadmin","app" | ForEach-Object {
            try { docker rm -f $_ | Out-Null } catch {}
          }
        '''

        // 3) Compose down/up dengan env yang diperlukan
        bat 'set "COMPOSE_PROJECT_NAME=%APP_NAME%" && set "PHPMYADMIN_PORT=%PHPMYADMIN_PORT%" && docker compose down -v --remove-orphans'
        bat 'set "COMPOSE_PROJECT_NAME=%APP_NAME%" && set "PHPMYADMIN_PORT=%PHPMYADMIN_PORT%" && docker compose up -d --build'
      }
    }
  }

  post {
    success { echo '‚úÖ Pipeline finished successfully!' }
    failure { echo '‚ùå Pipeline failed.' }
  }
}
